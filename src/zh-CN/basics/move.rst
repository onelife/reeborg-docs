第一个程序
=============

.. index:: move(), function

.. figure:: ../../../src/images/move.png
   :align: left

如果你遵循了本教程一开始给出的指示，那么你应该已经让乐跑走出它的第一步了。在代码编辑框里只需一个命令：

.. code-block:: python

    move()

``move()`` 是一个 Python **函数** 。每个函数都有名字，在这里是 ``move`` 。合理的函数名必须以字母或下划线（“_”）开头，可以包含字母、数字或下划线（“_”）。函数名后面的 ``()`` 是告诉乐跑（Python），此函数必须被 *执行* 或者 *调用* （这两个是同义词）。此函数必须自己独占一行。[我们待会儿将见到这条规则的例外情况。]

我们偶尔会用到 **流程图** ——用图形来表示程序。在流程图里，一条命令，如 ``move()`` 会这样呈现：

.. figure:: ../../flowcharts/move1.jpg
   :align: center

然后一个包含这条命令的完整程序会这样呈现：

.. figure:: ../../flowcharts/move.jpg
   :align: center

在流程图里，命令的执行按照箭头顺序，从“Start（开始）”开始，到“Stop（结束）”结束。

.. topic:: 试试这个！

    添加第二个 ``move()`` 命令，让乐跑多走一步。

.. hint::

   每条命令必须自己独占一行，并且行首没有多余的空格。


应对错误
-------------------

在写计算机程序的时候，你很可能会犯很多错误。为了展示乐跑如何对错误作出反应，我也会请你在程序里故意引入一个错误。


.. topic:: 试试这个！

    把 ``move()`` 改成 ``Move()`` （使用大写 M），然后再尝试运行一下。

发生什么情况了？
~~~~~~~~~~~~~~~~~~

Python ——乐跑的语言是“大小写敏感的”，使用小写字母名称的函数和使用大写字母名称的函数是不同的函数。现在你应该知道乐跑是怎么应对错误的了。让我们把程序改回来，运行一下正确的版本。


规则一
-------

你试过我在前面建议你做的了么？如果没有，我敦促你回去试试。你瞧，如果想学习编程，你必须遵守的最重要的规则如下：

.. index:: 规则一 

.. important::

    规则一
        学习计算机编程就像学习一件乐器：你要 **练习**，而不只是阅读。


每当我建议你试试什么的时候，都是有原因的。有时原因不会立刻出现，但我真的鼓励你去试试。我甚至建议，你应该做更多的尝试，比我建议的还多，试试不同的东西，以便探索的更深入。

一个特别的工具
---------------------------

在乐跑的世界的最顶部，你会发现一个名为 **乐跑键盘** 的按钮，按一下就会出现一个特别的键盘。再按一下键盘上的按钮，相应的命令—— Python 关键字等等，就会被自动插入编辑器。在需要确保函数名拼写正确和避免漏掉括号时，这个功能很实用。


.. admonition:: 写给教育工作者的内容

    乐跑键盘对于三类用户可能特别有用：小朋友——用一般的键盘输入对他们来说可能比较困难；触摸屏用户；以及使用非英语键盘，并且感觉输入一些 Python 符号很麻烦的用户。

    另外，在我写这段内容的时候，乐跑键盘包含的一个命令（ ``no_highlight()`` ）既没有记录在本教程里，也没有记录在在线帮助里。这类的疏忽也有可能出现在其它的命令上……如果出现了，请联系我改正。
